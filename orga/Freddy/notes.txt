The shell then parses these tokens into commands and other constructs,
removes the special meaning of certain words or characters,
expands others, redirects input and output as needed,
executes the specified command, waits for the command’s exit status,
and makes that exit status available for further inspection or processing.

3.1.1 Shell Operation
The following is a brief description of the shell’s operation when it reads and executes a command. Basically, the shell does the following:

Reads its input from a file (see Shell Scripts), from a string supplied as an argument to the -c invocation option (see Invoking Bash), or from the user’s terminal.
Breaks the input into words and operators, obeying the quoting rules described in Quoting. These tokens are separated by metacharacters. Alias expansion is performed by this step (see Aliases).
Parses the tokens into simple and compound commands (see Shell Commands).
Performs the various shell expansions (see Shell Expansions), breaking the expanded tokens into lists of filenames (see Filename Expansion) and commands and arguments.
Performs any necessary redirections (see Redirections) and removes the redirection operators and their operands from the argument list.
Executes the command (see Executing Commands).
Optionally waits for the command to complete and collects its exit status (see Exit Status).



You basically add a flag when running valgrind
valgrind --suppressions=readline.supp ./minishell
(I think the .supp extension is just a convention) (edited)


And then in that file readline.supp (which again can be called anything) you plop this:
{
    leak readline
    Memcheck:Leak
    ...
    fun:readline
}
{
    leak add_history
    Memcheck:Leak
    ...
    fun:add_history
}



I'm noticing that I've written "and then". This wasn't meant to signify the chronology, sorry if that was confusing.
You first create that file. Then you run Valgrind with the flag.

	{"|", PIPE},
	{"&&", AND},
	{"||", OR},
	{"(", OPEN_PAREN},
	{")", CLOSE_PAREN},
	{">", REDIRECTION_OUT},
	{"<", REDIRECTION_IN},
	{">>", REDIRECTION_APPEND},
	{"<<", HEREDOC},
	{"\"", DOUBLE_QUOTED_STRING},
	{"'", SINGLE_QUOTED_STRING},
	{"$", ENV_VARIABLE},
	{NULL, WORD}


git checkout -b new-branch-name
